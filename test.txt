//fait d'effacer a prendre en compte?

// return a tester

// leaks a tester

echo -n test //ok
echo test // ok
echon test // retirer bad address
echo truc test ex //ok
echo echo truc // ok
echo truc echo //ok

pwd ../ // ok
cd ~ // ne fonctionne pas mais pas chemin absolu ou relatif
cd /Users/alicetetu // ok
cd /Users/alicetetu/42/Cursus/minishell_0607 // ne fonctionne pas -> Minishell: execve: Permission denied
cd 42/Cursus/minishell_0607 // ok
cd /42/Cursus/minishell_0607 // message d'erreur devrait etre "cd: /42/Cursus/minishell_0607: No such file or directory" 

export test // ok
export =test // pas ok -> message d'erreur "export: '=test': not a valid identifier"
export test=test=test // ok
export ex=ex test=test =pouet // insertion ex et test ok mais manque le message d'erreur "export: `=pouet': not a valid identifier"
export ex=truc // ok ->remplace bien variable precedente
export test = truc // ne fonctionne pas -> message d'erreur attendu "export: `=': not a valid identifier"
echo \|\| // ne fonctionne pas -> affiche " \: command not found", devrait afficher ||
echo \$test // ne fonctionne pas -> affiche \truc, devrait afficher $test
export \ex=\ex -> ne fonctionne pas, affiche \ex=\ex devrait afficher ex=ex

unset pouet // variable qui n'existe pas , ok
unset pouet ex // premiere variable n'existe pas, deuxieme si -> pour l'instant unset la seconde alors qu'il ne faudrait pas

exit // ok mais leaks, variables d'environnement pas free?
echo test | exit //ok

ls ; cat truc; echo test // ok
cat file ; echo test > file ; cat file ; echo truc > file ; cat file //ok

grep clean < Makefile > file >> file //ok
grep clean < Makefile > file > ex //ok
grep clean < Makefile > file >> ex // ne fonctionne pas, n'ecrit pas a la suite de ex
echo test test test >> ex // ne fonctionne pas, n'ecrit pas a la suite
grep clean < truc // fichier qui n'existe pas -> bon message d'erreur mais quitte qlors qu'il ne devrait pas

grep clean < Makefile | cat | wc // ok
cat Makefile | grep clean | wc //ok

//(apres export test=truc)
echo $test // ok
cat $test // ok
echo $test > file //ok
echo 'test' // ok
echo '$test' // ok
echo "test" //ok
echo "$test" // ok
echo"$test" // ok sauf execve: Bad address
echo \$test // pas ok affiche \truc, or devrait afficher $test
echo \"$test\$ // affiche \" - devrait afficher "truc$

echo test | ctrl-D + \n // segfault
echo test | ctr-\ + \n // segfault
echo test | ctrl-C //segfault

cat ' // segfault
echo ' // segfault